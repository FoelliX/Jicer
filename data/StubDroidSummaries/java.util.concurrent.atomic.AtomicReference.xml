<?xml version="1.0" ?>
<summary fileFormatVersion="101">
	<methods>
		<method id="void &lt;init&gt;(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Return"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
		<method id="boolean compareAndSet(java.lang.Object,java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="1" />
					<to sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object get()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object getAndSet(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
					<to sourceSinkType="Return" />
				</flow>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Return"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
		<method id="void lazySet(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
		<method id="void set(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.String toString()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="boolean weakCompareAndSet(java.lang.Object,java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="1" />
					<to sourceSinkType="Field"
						AccessPath="[java.util.concurrent.atomic.AtomicReference: java.lang.Object value]"
						AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
	</methods>
</summary>